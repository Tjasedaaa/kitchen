{#
/**
 * @file
 * Theme override for a field.
 *
 * To override output, copy the "field.html.twig" from the templates directory
 * to your theme's directory and customize it, just like customizing other
 * Drupal templates such as page.html.twig or node.html.twig.
 *
 * Instead of overriding the theming for all fields, you can also just override
 * theming for a subset of fields using
 * @link themeable Theme hook suggestions. @endlink For example,
 * here are some theme hook suggestions that can be used for a field_foo field
 * on an article node type:
 * - field--node--field-foo--article.html.twig
 * - field--node--field-foo.html.twig
 * - field--node--article.html.twig
 * - field--field-foo.html.twig
 * - field--text-with-summary.html.twig
 * - field.html.twig
 *
 * Available variables:
 * - attributes: HTML attributes for the containing element.
 * - label_hidden: Whether to show the field label or not.
 * - title_attributes: HTML attributes for the title.
 * - label: The label for the field.
 * - multiple: TRUE if a field can contain multiple items.
 * - items: List of all the field items. Each item contains:
 *   - attributes: List of HTML attributes for each item.
 *   - content: The field item's content.
 * - entity_type: The entity type to which the field belongs.
 * - field_name: The name of the field.
 * - field_type: The type of the field.
 * - label_display: The display settings for the label.
 *
 *
 * @see template_preprocess_field()
 */
#}
{%
  set classes = [
    'col-12',
    'col-xs-6',
    'col-sm-4',
    'col-md-auto',
    'recipe__info-item'
  ]
%}
{%
  set title_classes = [
  ]
%}

{% set difficulty = element['#object'].field_stopnja_zahtevnosti.value %}

{% if label_hidden %}
  {% if multiple %}
    <div{{ attributes.addClass(classes, 'field__items') }}>
      {% for item in items %}
        <div{{ item.attributes.addClass('field__item') }}>{{ item.content }}</div>
      {% endfor %}
    </div>
  {% else %}
    {% for item in items %}
      {% if item.content %}
        <div{{ attributes.addClass(classes) }}>

          {% if difficulty  == '1' %}
            <svg class="icon icon-small">
              <use xlink:href="/{{ directory }}/images/sprite.svg#icon-hat-fill"></use>
            </svg>
            <svg class="icon icon-small">
              <use xlink:href="/{{ directory }}/images/sprite.svg#icon-hat-outline"></use>
            </svg>
            <svg class="icon icon-small">
              <use xlink:href="/{{ directory }}/images/sprite.svg#icon-hat-outline"></use>
            </svg>

          {% elseif difficulty  == '2' %}
            <svg class="icon icon-small">
              <use xlink:href="/{{ directory }}/images/sprite.svg#icon-hat-fill"></use>
            </svg>
            <svg class="icon icon-small">
              <use xlink:href="/{{ directory }}/images/sprite.svg#icon-hat-fill"></use>
            </svg>
            <svg class="icon icon-small">
              <use xlink:href="/{{ directory }}/images/sprite.svg#icon-hat-outline"></use>
            </svg>

          {% elseif difficulty  == '3' %}
            <svg class="icon icon-small">
              <use xlink:href="/{{ directory }}/images/sprite.svg#icon-hat-fill"></use>
            </svg>
            <svg class="icon icon-small">
              <use xlink:href="/{{ directory }}/images/sprite.svg#icon-hat-fill"></use>
            </svg>
            <svg class="icon icon-small">
              <use xlink:href="/{{ directory }}/images/sprite.svg#icon-hat-fill"></use>
            </svg>
          {% endif %}
        </div>

      {% endif %}
    {% endfor %}
  {% endif %}
{% endif %}
